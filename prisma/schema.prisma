// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Projektmodell - Hauptprojekte
model Project {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  author      String   @default("Ali Ramazan")
  description String   @db.Text
  role        String
  duration    String
  category    String
  technologies String   @db.Text
  mainImage   String   // Cloudinary URL
  
  // Relationships
  gallery     ProjectImage[]
  tags        ProjectTag[]
  
  // Meta fields
  featured    Boolean  @default(false)
  published   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Navigation
  previousSlug String?
  nextSlug     String?
  
  @@map("projects")
}

// Projektbilder - werden mit Cloudinary verwaltet
model ProjectImage {
  id          String  @id @default(cuid())
  projectId   String
  url         String  // Cloudinary URL
  publicId    String  // Cloudinary public ID (silme için)
  alt         String?
  order       Int     @default(0)
  
  // Relationship
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  createdAt   DateTime @default(now())
  
  @@map("project_images")
}

// Projekt Tags/Technologien
model ProjectTag {
  id        String @id @default(cuid())
  name      String
  color     String @default("#3b82f6") // Hex color
  
  // Relationships
  projects  Project[]
  
  createdAt DateTime @default(now())
  
  @@unique([name])
  @@map("project_tags")
}

// Kontaktmeldungen - Vom aktuellen Kontaktformular
model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String   @db.Text
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  @@map("contact_messages")
}

// Admin-Benutzer (für einfache Authentifizierung)
model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String   // Hashed
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("admin_users")
}

// Kunden-Management
model Customer {
  id               String   @id @default(cuid())
  firstname        String
  lastname         String
  companyname      String
  email            String   @unique
  phone            String
  address          String
  reference        String?  // Referans kodu (eğer başka bir müşteriden geliyorsa)
  price            Float?   // Orijinal fiyat
  finalPrice       Float?   // İndirim uygulandıktan sonraki fiyat
  discountRate     Float?   // Uygulanan toplam indirim oranı (%)
  
  // Referans sistemi
  myReferralCode   String?  @unique // Kendi referans kodu
  referralCount    Int?     @default(0)              // Kaç kişiyi refere etmiş
  totalEarnings    Float?   @default(0)              // Referanslardan toplam kazanç
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime? @default(now()) @updatedAt
  
  @@map("customers")
}

// Referans geçmişi ve indirim takibi
model ReferralTransaction {
  id              String   @id @default(cuid())
  referrerCode    String   // Referans kodunu kullandıran kişinin kodu
  newCustomerId   String   // Yeni müşterinin ID'si
  discountRate    Float    // Uygulanan indirim oranı (%)
  originalPrice   Float    // Orijinal fiyat
  finalPrice      Float    // İndirimli fiyat
  referralLevel   Int      // Referans seviyesi (1, 2, 3...)
  
  createdAt       DateTime @default(now())
  
  @@map("referral_transactions")
}
